:root {
  /* Colors */
  --background: hsl(0, 0%, 98%);
  --surface: hsl(0, 0%, 100%);
  --primary: hsl(220, 98%, 61%);
  --on-background: hsl(236, 9%, 61%);
  --on-surface-vivid: hsl(235, 19%, 35%);
  --on-surface-dim: hsl(236, 9%, 61%);

  --gradient: linear-gradient(
    to bottom right,
    hsl(192, 100%, 67%),
    hsl(280, 87%, 65%)
  );

  --box-shadow-color: rgba(90, 90, 90, 0.2);

  /* Typography */
  --font-size: 1.125rem;
  --font-family: "Josefin Sans";
  --font-weight-regular: 400;
  --font-weight-semibold: 700;

  /* BG images */
  --bg-desktop: url("./images/bg-desktop-light.jpg");
  --bg-mobile: url("./images/bg-mobile-light.jpg");
}

.dark {
  /* Colors */
  --background: hsl(235, 21%, 11%);
  --surface: hsl(235, 24%, 19%);
  --on-background: hsl(234, 11%, 52%);
  --on-surface-vivid: hsl(234, 39%, 85%);
  --on-surface-dim: hsl(233, 14%, 35%);

  --box-shadow-color: rgba(10, 10, 10, 0.2);

  /* BG images */
  --bg-desktop: url("./images/bg-desktop-dark.jpg");
  --bg-mobile: url("./images/bg-mobile-dark.jpg");
}

/* ------------------- */
/* Reset               */
/* ------------------- */
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul {
  list-style: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  background: var(--background);
  color: var(--on-surface-vivid);
  font-size: 1rem;
  font-family: "Josefin Sans", sans-serif;
  font-weight: 400;
  overflow-x: hidden;
}

@media (max-width: 383px) {
  body {
    font-size: 0.937rem;
  }
}

/* Make images easier to work with */
img {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button {
  font: inherit;
  color: inherit;
  background: transparent;
  border: none;
}

/* ------------------- */
/* Utility classes     */
/* ------------------- */

/* General */

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.container {
  width: 90%;
  max-width: 600px;
  margin: 0 auto;
}

.push {
  margin-left: auto;
}

/* Colors */
.background-color {
  background-color: var(--background);
}

.surface-color {
  background-color: var(--surface);
}

.text-on-background {
  color: var(--on-background);
}

.text-on-surface-vivid {
  color: var(--on-surface-vivid);
}

.text-on-surface-dim {
  color: var(--on-surface-dim);
}

.text-center {
  text-align: center;
}

.msg {
  padding-block: 1.5rem;
}

.msg-margin {
  margin-block: 1.5rem;
}

.box-shadow {
  box-shadow: var(--box-shadow-color) 0px 2px 8px 0px;
}

.border-radius {
  border-radius: 5px;
  overflow: hidden;
}

.padding {
  padding: 1rem;
}

.padding-y {
  padding-block: 1rem;
}

/* ------------------- */
/* Compontents         */
/* ------------------- */

.main-content {
  /* margin-top: -10.5rem; */
  margin-top: calc(7rem - 30vh);
}

/* Button */
.btn {
  cursor: pointer;
}

.btn:hover {
  color: var(--on-surface-vivid);
}

.active-btn {
  color: var(--primary);
}

/* Header */
.primary-header {
  height: 30vh;
  padding-block: 4rem;
  background: var(--bg-mobile) no-repeat center/cover;
}

@media (min-width: 750px) {
  .primary-header {
    background: var(--bg-desktop) no-repeat center/cover;
  }
}

.primary-header .container {
  justify-content: space-between;
}

.primary-header h1 {
  color: #fff;
  text-transform: uppercase;
  letter-spacing: 0.4em;
}

/* Form */
form .form-control.flex {
  justify-content: flex-start;
  align-items: center;
  margin-block: 2rem;
}

form input[type="text"] {
  width: 100%;
  border-radius: 5px;
}

form input[type="text"]::placeholder {
  color: var(--on-background);
}

form input[type="text"]:focus {
  outline: 0;
}

/* List container */
.item {
  --gap: 0;
  padding: 1rem;
  grid-template-columns: 1fr 10fr 1fr;
  align-items: center;
  border-bottom: 1px solid var(--on-surface-dim);
}

.todo-content {
  margin-inline: 1rem;
}

.todo-content.completed {
  text-decoration: line-through;
  color: var(--on-surface-dim);
}

.cross-icon {
  display: grid;
  place-items: center;
}

@media (min-width: 961px) {
  .cross-icon {
    visibility: hidden;
  }

  .item:hover .cross-icon {
    visibility: visible;
  }
}

/* Checkbox */
.checkmark {
  border-radius: 50%;
  width: 1.3rem;
  height: 1.3rem;
  background: var(--on-surface-dim);
  display: flex;
  justify-content: center;
  align-items: center;
  transition: background 300ms ease-in-out;
}

.item .checkmark:hover,
.item:hover .checkmark {
  background: var(--gradient);
}

.checkmark.completed {
  background: var(--gradient);
}

.checkmark-inner {
  width: calc(100% - 2px);
  height: calc(100% - 2px);
  background-color: var(--surface);
  border-radius: 50%;
}

input[type="checkbox"] {
  display: none;
}

/* List footer */

.active-todos-count {
  grid-area: stat;
  padding-left: 1rem;
  border-bottom-left-radius: 5px;
}

.btn-clear-completed-todos {
  grid-area: clear;
  display: grid;
  justify-content: end;
  padding-right: 1.5rem;
  border-bottom-right-radius: 5px;
}

.filter-list {
  grid-area: filter;
  justify-content: center;
  margin-top: 1rem;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.list-footer {
  --gap: 0;
  grid-template-columns: repeat(2, 1fr);
  grid-template-areas:
    "stat clear"
    "filter filter";
}

@media (min-width: 640px) {
  .list-footer {
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: "stat filter clear";
  }

  .filter-list {
    margin-top: 0;
    border-radius: 0;
  }
}
